#!/bin/sh
#
# __ __| |           |  /_) |     ___|             |           |
#    |   __ \   _ \  ' /  | |  / |      _ \ __ \   |      _` | __ \   __|
#    |   | | |  __/  . \  |   <  |   |  __/ |   |  |     (   | |   |\__ \
#   _|  _| |_|\___| _|\_\_|_|\_\\____|\___|_|  _| _____|\__,_|_.__/ ____/
#
# BOOTSTRAP script for MPC device.
# POST AZ01-LAUNCH-MPC script

# -----------------------------------------------------------------------------
# submodules launcher : add to the doer , separated by space
#
# install      : setup some directories and permissions on the filesystem
# arp_overlay  : create an overlay of Arp Patterns on the sdcard (if ext4)
# telnetd      : launch a telnetd server (root access)
# nomoressh    : stop the ssh temporarily for security reasons.
#                You'll need to remove the usb key to reactivate ssh.
# etcovr_clean : clean passwords files and ssh config on the /etc overlay
# anyctrl      : use any midi controller as MPC/Force control surface (full ports)
# anyctrl_lt   : use any midi controller as MPC/Force control surface (private only)
# iamforcectrl : Force binary launcher on a MPC (binary not provided)

TKGL_DOER=""

# -----------------------------------------------------------------------------

# for debugging purpose locally:
if [ "x$TKGL_PATH_FILE" == "x" ]
then
  export TKGL_PATH_FILE=$(dirname $(readlink -f "$0"))/tkgl_path
fi

source $TKGL_PATH_FILE

# Add tkgl bin first into the path only one time
echo $PATH | grep /tkgl >/dev/null || export PATH=$TKGL_BIN:$PATH

# Add tkgl library path
export LD_LIBRARY_PATH=/lib:/usr/lib:$TKGL_LIB

echo "*** In bootstrap script $TKGL_BOOTSTRAP ***">$TKGL_LOG
date>>$TKGL_LOG
uname -a>>$TKGL_LOG

for MODULE in $TKGL_DOER ; do
   echo "-- Module $MODULE --">>$TKGL_LOG
   sh "$TKGL_SCRIPT/tkgl_mod_$MODULE.sh">>$TKGL_LOG
done
